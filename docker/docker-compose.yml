version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:16-alpine
    container_name: encryption-postgres
    restart: always
    environment:
      POSTGRES_DB: encryption_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgrespassword
      PGDATA: /var/lib/postgresql/data/pgdata
      TZ: Asia/Seoul
      LANG: ko_KR.utf8
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - encryption-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ElasticSearch (검색 기능)
  elasticsearch:
    build:
      context: ./elasticsearch
      dockerfile: Dockerfile
    container_name: encryption-elasticsearch
    environment:
      - node.name=encryption-es-node
      - cluster.name=encryption-es-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - encryption-network
    healthcheck:
      test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s
    depends_on:
      - postgres

  # Kibana (ElasticSearch 모니터링)
  kibana:
    image: docker.elastic.co/kibana/kibana:8.10.4
    container_name: encryption-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - encryption-network
    depends_on:
      - elasticsearch
    healthcheck:
      test: ["CMD-SHELL", "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s

  # PgAdmin (PostgreSQL 관리 도구)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: encryption-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8888:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    networks:
      - encryption-network
    depends_on:
      - postgres

# 볼륨 정의
volumes:
  postgres-data:
    driver: local
  elasticsearch-data:
    driver: local
  pgadmin-data:
    driver: local

# 네트워크 정의
networks:
  encryption-network:
    driver: bridge