plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.personaldata'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot 기본
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// 데이터베이스 드라이버
	runtimeOnly 'org.postgresql:postgresql'

	// JPA/Hibernate
	implementation 'org.hibernate.orm:hibernate-core'

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

	// 암호화 관련 라이브러리
	implementation 'org.bouncycastle:bcprov-jdk15on:1.70'  // 고급 암호화 알고리즘
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'  // 프로퍼티 암호화

	// 키 관리 (AWS KMS 사용 시)
	implementation 'com.amazonaws:aws-java-sdk-kms:1.12.650'

	// 캐싱
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'com.github.ben-manes.caffeine:caffeine'

	// ElasticSearch (검색엔진 연동)
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'

	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	// JSON 처리
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

	// 유틸리티
	implementation 'org.apache.commons:commons-lang3:3.14.0'
	implementation 'commons-codec:commons-codec:1.16.0'
	implementation 'com.google.guava:guava:32.1.3-jre'

	// API 문서화
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// 테스트
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'org.testcontainers:testcontainers:1.19.3'
	testImplementation 'org.testcontainers:postgresql:1.19.3'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
}

tasks.named('test') {
	useJUnitPlatform()
}

// QueryDSL Q 클래스 생성 경로
sourceSets {
	main {
		java {
			srcDirs += file("$buildDir/generated/querydsl")
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorPath = configurations.annotationProcessor
	options.compilerArgs += "-parameters"
}